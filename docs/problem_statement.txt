// You have 24 hours from sending to complete this problem using JavaScript.
// Please email your solution to mei@famo.us.

// Given a (boggle) 4x4 board of letters, and a dictionary of valid words, 
// find all of the unique words you can make from the given board.  
// The board and the dictionary  of valid words
// are provided in the problem as board.js and dict.txt.
// You make a word by starting on a letter square (the first letter of your 
// word),  and moving one letter square left, right, up, down, or diagonally 
// (the second letter of your word), and continuing until your word is complete.
// You cannot land on the same square twice in a single word.
//
// For example, in the board below:
//
//     WELC
//     OMET
//     OTHE
//     GAME
//
// you could form the word WOO from the upper left square, GAME across the
// bottom, or THEM from the middle four squares.  Longer words like THEME 
// exist, or even short words like ME or HA.

// The program's output, should be a sorted list of valid words and 
// should match the solution_output.txt provided if done correctly.   
// If it does not EXACTLY match the output (as in, an empty "diff"), 
// please indicate why.

// QUESTION A: Does your program output match solution_output.txt exactly?  If not, why not?




// Your answer may be more than one file but please indicate HERE how you would run it:
// QUESTION B:  Please note how this solution is to be run.  If you must open a 
// web page, run a set of shell commands, run "node index.js", or similar, 
// please indicate that in your answer.  These instructions should be 
// followed by an intelligent non-engineer.




// Additonally, consider the following questions and answer here:
// 1. Would your solution work if we expanded the board to 5x5?  6x6?  At what point do you think it would give out?


// 2. What are some other ways to implement your answer?  


// 3. For each of these, what is the time and space tradeoff for running this against another solution?


// 4. For each of these, is it more suited for a long-running server, or for a one-off script?  


